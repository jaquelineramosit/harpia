{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar fp_1 = require(\"lodash/fp\");\n\nvar React = require(\"react\");\n\nvar reactstrap_1 = require(\"reactstrap\");\n\nvar Validation_1 = require(\"./Validation\");\n\nvar ValidatingFormGroup =\n/** @class */\nfunction (_super) {\n  __extends(ValidatingFormGroup, _super);\n\n  function ValidatingFormGroup(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {};\n    _this.enhance = _this.enhance.bind(_this);\n    _this.reference = _this.reference.bind(_this);\n    _this.isValid = _this.isValid.bind(_this);\n    _this.handle = _this.handle.bind(_this);\n    return _this;\n  }\n\n  ValidatingFormGroup.prototype.componentWillReceiveProps = function (nextProps) {\n    if (nextProps.valid !== this.props.valid) {\n      this.setState({\n        valid: undefined\n      });\n\n      if (typeof this.props.onStateChange === 'function') {\n        this.props.onStateChange(__assign({}, this.state, {\n          valid: undefined\n        }));\n      }\n    }\n  };\n\n  ValidatingFormGroup.prototype.enhance = function (element, index) {\n    var trigger = this.props.trigger;\n\n    switch (element.type) {\n      case reactstrap_1.Input:\n        return React.cloneElement(element, {\n          innerRef: this.reference,\n          valid: this.isValid(),\n          onChange: this.handle(element.props.onChange, 'change'),\n          onBlur: this.handle(element.props.onBlur, 'blur'),\n          key: index\n        });\n\n      default:\n        return element;\n    }\n  };\n\n  ValidatingFormGroup.prototype.reference = function (ref) {\n    return ref && this.state.ref !== ref && this.setState({\n      ref: ref\n    });\n  };\n\n  ValidatingFormGroup.prototype.isValid = function () {\n    return this.state.valid === undefined ? this.props.valid : this.state.valid;\n  };\n\n  ValidatingFormGroup.prototype.handle = function (innerHandle, trigger) {\n    var _this = this;\n\n    return function (e) {\n      if (typeof innerHandle === 'function') innerHandle(e);\n\n      if ((_this.props.trigger || 'blur') === trigger) {\n        var newState = Validation_1.validate(_this.state);\n\n        _this.setState(newState);\n\n        if (typeof _this.props.onStateChange === 'function') {\n          _this.props.onStateChange(newState);\n        }\n      }\n    };\n  };\n\n  ValidatingFormGroup.prototype.render = function () {\n    var children = this.props.children;\n    var props = fp_1.omit(['trigger', 'state', 'onStateChange'], this.props);\n    React;\n    return React.createElement(reactstrap_1.FormGroup, __assign({}, props), children.map(this.enhance));\n  };\n\n  return ValidatingFormGroup;\n}(React.Component);\n\nexports.ValidatingFormGroup = ValidatingFormGroup;","map":null,"metadata":{},"sourceType":"script"}